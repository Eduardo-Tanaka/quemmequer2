@model AM_QMQ.ViewsModel.IndividualViewModel
@{
    ViewBag.Title = "Editar Fisica";
}

<h2>Editar</h2>

@using (@Html.BeginForm("EditarFisica", "Pessoa"))
{
    @Helper.Mensagem(TempData["msg"] as string, "success")
    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(i => i.Name)
            @Html.TextBoxFor(i => i.Name, new { @class = "form-control", placeholder = "Nome" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(i => i.Cpf)
            @Html.TextBoxFor(i => i.Cpf, new { @class = "form-control", placeholder = "CPF" })
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(i => i.Rg)
            @Html.TextBoxFor(i => i.Rg, new { @class = "form-control", placeholder = "RG" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(i => i.BirthDate)
            @Html.TextBoxFor(i => i.BirthDate, new { @class = "form-control", placeholder = "Data de Nascimento" })
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(i => i.Phone1)
            @Html.TextBoxFor(i => i.Phone1, new { @class = "form-control", placeholder = "Telefone Residencial" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(i => i.Phone2)
            @Html.TextBoxFor(i => i.Phone2, new { @class = "form-control", placeholder = "Telefone Celular" })
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(i => i.Person.Address.Cep)
            @Html.TextBoxFor(i => i.Person.Address.Cep, new { @class = "form-control", placeholder = "Cep" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(i => i.Person.Address.Addition)
            @Html.TextBoxFor(i => i.Person.Address.Addition, new { @class = "form-control", placeholder = "Complemento" })
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(i => i.Person.Address.Patio)
            @Html.TextBoxFor(i => i.Person.Address.Patio, new { @class = "form-control", placeholder = "Endereço" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(i => i.Person.Address.Number)
            @Html.TextBoxFor(i => i.Person.Address.Number, new { @class = "form-control", placeholder = "Número" })
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-2">
            @Html.LabelFor(i => i.Person.Address.State)
            @Html.TextBoxFor(i => i.Person.Address.State, new { @class = "form-control", placeholder = "Estado" })
        </div>
        <div class="form-group col-md-5">
            @Html.LabelFor(i => i.Person.Address.City)
            @Html.TextBoxFor(i => i.Person.Address.City, new { @class = "form-control", placeholder = "Cidade" })
        </div>
        <div class="form-group col-md-5">
            @Html.LabelFor(i => i.Person.Address.District)
            @Html.TextBoxFor(i => i.Person.Address.District, new { @class = "form-control", placeholder = "Cidade" })
        </div>
    </div>

    <div>
        @Helper.Botao("Editar", "success")
    </div>
}

<script>
    $().ready(function () {
        $("#BirthDate").inputmask("99/99/9999");
        if ($("#BirthDate").val() == "11/11/1800") {
            $("#BirthDate").val("");
        }

        $("#Cpf").inputmask("999.999.999-99");

        $("#Phone1").mask("(99)9999-9999");
        $("#Phone2").mask("(99)9999-9999?9");
    
        $("#Person_Address_Cep").mask("99999-999");
        $("#Person_Address_Cep").blur(function () {
            $.ajax({
                url: "http://api.postmon.com.br/v1/cep/" + $(this).val(),
                type: "get",
                success: function (retorno) {
                    $("#Person_Address_Patio").val(retorno.logradouro.toUpperCase());
                    $("#Person_Address_District").val(retorno.bairro.toUpperCase());
                    $("#Person_Address_City").val(retorno.cidade.toUpperCase());
                    $("#Person_Address_State").val(retorno.estado.toUpperCase());
                }
            })
        })
    })

    $(function () {
        $("#BirthDate").datepicker({
            dateFormat: 'dd/mm/yy',
            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
            dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            nextText: 'Próximo',
            prevText: 'Anterior'
        });
    });

    jQuery.browser = {};
    (function () {
        jQuery.browser.msie = false;
        jQuery.browser.version = 0;
        if (navigator.userAgent.match(/MSIE ([0-9]+)\./)) {
            jQuery.browser.msie = true;
            jQuery.browser.version = RegExp.$1;
        }
    })();
</script>